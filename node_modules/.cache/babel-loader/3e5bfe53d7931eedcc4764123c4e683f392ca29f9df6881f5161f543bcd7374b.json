{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\WebSocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useRef } from 'react';\n\n// Context to share WebSocket connection across the app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketContext = /*#__PURE__*/createContext(null);\nexport const WebSocketProvider = ({\n  children\n}) => {\n  _s();\n  const connection = useRef(null);\n  useEffect(() => {\n    let attempts = 0;\n    const connect = () => {\n      const ws = new WebSocket('ws://localhost:8080');\n      ws.onopen = () => {\n        console.log('WebSocket connection established');\n        attempts = 0; // Reset attempts on successful connection\n      };\n      ws.onerror = err => {\n        console.error('WebSocket error:', err);\n      };\n      ws.onclose = () => {\n        console.log('WebSocket closed. Reconnecting...');\n        if (attempts < 5) {\n          setTimeout(connect, 1000 * Math.pow(2, attempts++)); // Exponential backoff\n        }\n      };\n      connection.current = ws;\n    };\n    connect();\n    return () => {\n      var _connection$current;\n      return (_connection$current = connection.current) === null || _connection$current === void 0 ? void 0 : _connection$current.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    value: connection.current,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketProvider, \"yek/JRnmbSIx45Cd1ZvTmIIko60=\");\n_c = WebSocketProvider;\nexport const useWebSocket = () => {\n  _s2();\n  return useContext(WebSocketContext);\n};\n_s2(useWebSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"WebSocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useRef","jsxDEV","_jsxDEV","WebSocketContext","WebSocketProvider","children","_s","connection","attempts","connect","ws","WebSocket","onopen","console","log","onerror","err","error","onclose","setTimeout","Math","pow","current","_connection$current","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWebSocket","_s2","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/WebSocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useRef } from 'react';\r\n\r\n// Context to share WebSocket connection across the app\r\nconst WebSocketContext = createContext<WebSocket | null>(null);\r\n\r\nexport const WebSocketProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const connection = useRef<WebSocket | null>(null);\r\n    useEffect(() => {\r\n        let attempts = 0;\r\n    \r\n        const connect = () => {\r\n            const ws = new WebSocket('ws://localhost:8080');\r\n    \r\n            ws.onopen = () => {\r\n                console.log('WebSocket connection established');\r\n                attempts = 0; // Reset attempts on successful connection\r\n            };\r\n    \r\n            ws.onerror = (err) => {\r\n                console.error('WebSocket error:', err);\r\n            };\r\n    \r\n            ws.onclose = () => {\r\n                console.log('WebSocket closed. Reconnecting...');\r\n                if (attempts < 5) {\r\n                    setTimeout(connect, 1000 * Math.pow(2, attempts++)); // Exponential backoff\r\n                }\r\n            };\r\n    \r\n            connection.current = ws;\r\n        };\r\n    \r\n        connect();\r\n    \r\n        return () => connection.current?.close();\r\n    }, []);\r\n\r\n    return (\r\n        <WebSocketContext.Provider value={connection.current}>\r\n            {children}\r\n        </WebSocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useWebSocket = () => {\r\n    return useContext(WebSocketContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAE3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,gBAAGN,aAAa,CAAmB,IAAI,CAAC;AAE9D,OAAO,MAAMO,iBAA0D,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAMC,UAAU,GAAGP,MAAM,CAAmB,IAAI,CAAC;EACjDD,SAAS,CAAC,MAAM;IACZ,IAAIS,QAAQ,GAAG,CAAC;IAEhB,MAAMC,OAAO,GAAGA,CAAA,KAAM;MAClB,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;MAE/CD,EAAE,CAACE,MAAM,GAAG,MAAM;QACdC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/CN,QAAQ,GAAG,CAAC,CAAC,CAAC;MAClB,CAAC;MAEDE,EAAE,CAACK,OAAO,GAAIC,GAAG,IAAK;QAClBH,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAED,GAAG,CAAC;MAC1C,CAAC;MAEDN,EAAE,CAACQ,OAAO,GAAG,MAAM;QACfL,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD,IAAIN,QAAQ,GAAG,CAAC,EAAE;UACdW,UAAU,CAACV,OAAO,EAAE,IAAI,GAAGW,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEb,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;QACzD;MACJ,CAAC;MAEDD,UAAU,CAACe,OAAO,GAAGZ,EAAE;IAC3B,CAAC;IAEDD,OAAO,CAAC,CAAC;IAET,OAAO;MAAA,IAAAc,mBAAA;MAAA,QAAAA,mBAAA,GAAMhB,UAAU,CAACe,OAAO,cAAAC,mBAAA,uBAAlBA,mBAAA,CAAoBC,KAAK,CAAC,CAAC;IAAA;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA,CAACC,gBAAgB,CAACsB,QAAQ;IAACC,KAAK,EAAEnB,UAAU,CAACe,OAAQ;IAAAjB,QAAA,EAChDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEpC,CAAC;AAACxB,EAAA,CArCWF,iBAA0D;AAAA2B,EAAA,GAA1D3B,iBAA0D;AAuCvE,OAAO,MAAM4B,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,OAAOnC,UAAU,CAACK,gBAAgB,CAAC;AACvC,CAAC;AAAC8B,GAAA,CAFWD,YAAY;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}