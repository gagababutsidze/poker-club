{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\PokerComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useWebSocket } from '../WebSocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokerComponent = () => {\n  _s();\n  const playerName = window.localStorage.getItem('playerName');\n  const [test, setTest] = useState(null);\n  const navigate = useNavigate();\n  const ws = useWebSocket(); // this can be null or a WebSocket\n\n  useEffect(() => {\n    if (ws) {\n      // TypeScript will now know ws is a WebSocket\n      ws.send(JSON.stringify({\n        action: 'joinGame',\n        playerName\n      }));\n      ws.onmessage = e => {\n        const data = JSON.parse(e.data);\n        setTest(data.message);\n        if (data.tableId) {\n          navigate(`/play/${data.tableId}`);\n          window.localStorage.setItem('tableId', data.tableId);\n        }\n      };\n\n      // Clean up the event listener on unmount\n      return () => {\n        ws.onmessage = null; // Clean up the onmessage handler\n      };\n    } else {\n      console.log('ws is not available');\n    }\n  }, [ws, playerName, navigate]); // dependency array includes ws, playerName, and navigate\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: test\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(PokerComponent, \"R1xw7z7xgle1kHuGi+Yu3sJLKSc=\", false, function () {\n  return [useNavigate, useWebSocket];\n});\n_c = PokerComponent;\nexport default PokerComponent;\nvar _c;\n$RefreshReg$(_c, \"PokerComponent\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useWebSocket","jsxDEV","_jsxDEV","PokerComponent","_s","playerName","window","localStorage","getItem","test","setTest","navigate","ws","send","JSON","stringify","action","onmessage","e","data","parse","message","tableId","setItem","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/PokerComponent.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useWebSocket } from '../WebSocketContext';\r\n\r\nconst PokerComponent = () => {\r\n    const playerName = window.localStorage.getItem('playerName');\r\n    const [test, setTest] = useState<string | null>(null);\r\n    const navigate = useNavigate();\r\n\r\n    const ws = useWebSocket(); // this can be null or a WebSocket\r\n\r\n    useEffect(() => {\r\n        if (ws) {\r\n            // TypeScript will now know ws is a WebSocket\r\n            ws.send(JSON.stringify({ action: 'joinGame', playerName }));\r\n\r\n            ws.onmessage = (e: MessageEvent) => {\r\n                const data = JSON.parse(e.data);\r\n                setTest(data.message);\r\n                if (data.tableId) {\r\n                    navigate(`/play/${data.tableId}`);\r\n                    window.localStorage.setItem('tableId', data.tableId);\r\n                }\r\n            };\r\n\r\n            // Clean up the event listener on unmount\r\n            return () => {\r\n                ws.onmessage = null; // Clean up the onmessage handler\r\n            };\r\n        } else {\r\n            console.log('ws is not available');\r\n        }\r\n    }, [ws, playerName, navigate]); // dependency array includes ws, playerName, and navigate\r\n\r\n    return (\r\n        <div>\r\n            <h1>{test}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PokerComponent;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAoBC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,UAAU,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EACrD,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,EAAE,GAAGZ,YAAY,CAAC,CAAC,CAAC,CAAC;;EAE3BH,SAAS,CAAC,MAAM;IACZ,IAAIe,EAAE,EAAE;MACJ;MACAA,EAAE,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE,UAAU;QAAEX;MAAW,CAAC,CAAC,CAAC;MAE3DO,EAAE,CAACK,SAAS,GAAIC,CAAe,IAAK;QAChC,MAAMC,IAAI,GAAGL,IAAI,CAACM,KAAK,CAACF,CAAC,CAACC,IAAI,CAAC;QAC/BT,OAAO,CAACS,IAAI,CAACE,OAAO,CAAC;QACrB,IAAIF,IAAI,CAACG,OAAO,EAAE;UACdX,QAAQ,CAAC,SAASQ,IAAI,CAACG,OAAO,EAAE,CAAC;UACjChB,MAAM,CAACC,YAAY,CAACgB,OAAO,CAAC,SAAS,EAAEJ,IAAI,CAACG,OAAO,CAAC;QACxD;MACJ,CAAC;;MAED;MACA,OAAO,MAAM;QACTV,EAAE,CAACK,SAAS,GAAG,IAAI,CAAC,CAAC;MACzB,CAAC;IACL,CAAC,MAAM;MACHO,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACtC;EACJ,CAAC,EAAE,CAACb,EAAE,EAAEP,UAAU,EAAEM,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhC,oBACIT,OAAA;IAAAwB,QAAA,eACIxB,OAAA;MAAAwB,QAAA,EAAKjB;IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAnCID,cAAc;EAAA,QAGCJ,WAAW,EAEjBC,YAAY;AAAA;AAAA+B,EAAA,GALrB5B,cAAc;AAqCpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}