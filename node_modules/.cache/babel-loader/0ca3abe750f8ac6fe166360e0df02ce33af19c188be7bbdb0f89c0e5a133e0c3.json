{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\Playboard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './playboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playboard = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [myCards, setMyCards] = useState(null);\n  const [mySecondCard, setMySecondCard] = useState(null);\n  useEffect(() => {\n    const connection = new WebSocket('ws://localhost:8080');\n    connection.onopen = () => {\n      const playerName = window.localStorage.getItem('playerName');\n      const tableId = window.localStorage.getItem('tableId');\n      connection.send(JSON.stringify({\n        action: 'playGame',\n        playerName,\n        tableId\n      }));\n    };\n    connection.onmessage = e => {\n      const data = JSON.parse(e.data);\n      if (data.players) {\n        const playerNames = data.players.map(p => p.playerName);\n        const storedPlayerName = window.localStorage.getItem('playerName');\n        const currentPlayerIndex = playerNames.findIndex(name => name === storedPlayerName);\n        console.log(data.players);\n\n        // Reorder players so current player is always first\n        const reorderedPlayers = [...playerNames.slice(currentPlayerIndex), ...playerNames.slice(0, currentPlayerIndex)];\n        setPlayers(reorderedPlayers);\n      }\n      if (data.card) {\n        setMyCards(data.card[0]);\n        setMySecondCard(data.card[1]);\n      }\n    };\n    connection.onclose = () => {\n      window.localStorage.removeItem('tableId');\n    };\n    return () => {\n      connection.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player player-${index}`,\n          style: {\n            position: 'absolute'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: `player-name position-${index}`,\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, player, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Playboard, \"ZjhLI392mxxo8HRZClyKOoth6j4=\");\n_c = Playboard;\nexport default Playboard;\nvar _c;\n$RefreshReg$(_c, \"Playboard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Playboard","_s","players","setPlayers","myCards","setMyCards","mySecondCard","setMySecondCard","connection","WebSocket","onopen","playerName","window","localStorage","getItem","tableId","send","JSON","stringify","action","onmessage","e","data","parse","playerNames","map","p","storedPlayerName","currentPlayerIndex","findIndex","name","console","log","reorderedPlayers","slice","card","onclose","removeItem","close","className","children","player","index","style","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/Playboard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport cardsType from '../types';\r\nimport './playboard.css';\r\n\r\nconst Playboard = () => {\r\n    const [players, setPlayers] = useState<string[]>([]);\r\n    const [myCards, setMyCards] = useState<cardsType | null>(null);\r\n    const [mySecondCard, setMySecondCard] = useState<cardsType | null>(null);\r\n    \r\n    useEffect(() => {\r\n        const connection = new WebSocket('ws://localhost:8080');\r\n\r\n        connection.onopen = () => {\r\n            const playerName = window.localStorage.getItem('playerName');\r\n            const tableId = window.localStorage.getItem('tableId');\r\n            connection.send(JSON.stringify({ action: 'playGame', playerName, tableId }));\r\n        };\r\n\r\n        connection.onmessage = (e) => {\r\n            const data = JSON.parse(e.data);\r\n            if (data.players) {\r\n                const playerNames = data.players.map((p: any) => p.playerName);\r\n                const storedPlayerName = window.localStorage.getItem('playerName');\r\n                const currentPlayerIndex = playerNames.findIndex((name: string) => name === storedPlayerName);\r\n\r\n\r\n\r\n                console.log(data.players);\r\n                \r\n                // Reorder players so current player is always first\r\n                const reorderedPlayers = [\r\n                    ...playerNames.slice(currentPlayerIndex),\r\n                    ...playerNames.slice(0, currentPlayerIndex)\r\n                ];\r\n                setPlayers(reorderedPlayers);\r\n            }\r\n            if (data.card) {\r\n                setMyCards(data.card[0]);\r\n                setMySecondCard(data.card[1]);\r\n            }\r\n        };\r\n\r\n        connection.onclose = () => {\r\n            window.localStorage.removeItem('tableId');\r\n        };\r\n\r\n        return () => {\r\n            connection.close();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"playboard\">\r\n            <div className='board-border'>\r\n                <div className='board'>\r\n                    {players.map((player, index) => (\r\n                        <div\r\n                            key={player}\r\n                            className={`player player-${index}`}\r\n                            style={{ position: 'absolute' }}\r\n                        >\r\n                            <h1 className={`player-name position-${index}`}>\r\n                                {player}\r\n                            </h1>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Playboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}