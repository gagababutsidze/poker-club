{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\Playboard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './playboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playboard = () => {\n  _s();\n  const [players, setPlayers] = useState([]); // Array to hold player names\n  const [myCards, setMyCards] = useState(null); // Initialize with null\n  const [mySecondCard, setMySecodnCard] = useState(null);\n  useEffect(() => {\n    const connection = new WebSocket('ws://localhost:8080');\n    connection.onopen = e => {\n      console.log('WebSocket connection established.');\n      const playerName = window.localStorage.getItem('playerName');\n      const tableId = window.localStorage.getItem('tableId');\n      connection.send(JSON.stringify({\n        action: 'playGame',\n        playerName: playerName,\n        tableId: tableId\n      }));\n    };\n    try {\n      connection.onmessage = e => {\n        try {\n          const data = JSON.parse(e.data);\n          console.log('Parsed data:', data);\n\n          // Extract player names from the data and update the players state\n          const playerNames = data.map(p => p.playerName);\n          setPlayers(playerNames); // Update players state with the array of names\n        } catch (error) {\n          console.error('Error parsing data:', error);\n          console.log('Raw data received:', e.data);\n        }\n      };\n    } catch (error) {\n      console.log(error);\n    }\n    connection.onerror = error => {\n      console.error('WebSocket Error:', error);\n    };\n    connection.onclose = () => {\n      console.log('WebSocket connection closed.');\n      window.localStorage.removeItem('tableId');\n    };\n\n    // Cleanup when the component unmounts\n    return () => {\n      connection.close();\n      console.log('WebSocket connection closed on component unmount.');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player player-1\",\n          children: players[0] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player player-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards-div\",\n            children: players[1] || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player player-3\",\n          children: players[2] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player player-4\",\n          children: players[3] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"panel-btn fold\",\n        children: \"Fold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"panel-btn call\",\n        children: \"Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"panel-btn raise\",\n        children: \"Raise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Playboard, \"YDG00gcV0uOM9XU5/7kxHKzIm6Q=\");\n_c = Playboard;\nexport default Playboard;\nvar _c;\n$RefreshReg$(_c, \"Playboard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Playboard","_s","players","setPlayers","myCards","setMyCards","mySecondCard","setMySecodnCard","connection","WebSocket","onopen","e","console","log","playerName","window","localStorage","getItem","tableId","send","JSON","stringify","action","onmessage","data","parse","playerNames","map","p","error","onerror","onclose","removeItem","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/Playboard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport cardsType from '../types';\r\nimport './playboard.css';\r\n\r\nconst Playboard = () => {\r\n    const [players, setPlayers] = useState<string[]>([]); // Array to hold player names\r\n    const [myCards, setMyCards] = useState<cardsType | null>(null); // Initialize with null\r\n    const [mySecondCard, setMySecodnCard] = useState<cardsType | null>(null);\r\n\r\n    useEffect(() => {\r\n        const connection = new WebSocket('ws://localhost:8080');\r\n\r\n        connection.onopen = (e) => {\r\n            console.log('WebSocket connection established.');\r\n            const playerName = window.localStorage.getItem('playerName');\r\n            const tableId = window.localStorage.getItem('tableId');\r\n            connection.send(JSON.stringify({ action: 'playGame', playerName: playerName, tableId: tableId }));\r\n        };\r\n\r\n        try {\r\n            connection.onmessage = (e) => {\r\n                try {\r\n                    const data = JSON.parse(e.data);\r\n                    console.log('Parsed data:', data);\r\n\r\n                    // Extract player names from the data and update the players state\r\n                    const playerNames = data.map((p: any) => p.playerName);\r\n                    setPlayers(playerNames); // Update players state with the array of names\r\n                } catch (error) {\r\n                    console.error('Error parsing data:', error);\r\n                    console.log('Raw data received:', e.data);\r\n                }\r\n            };\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        connection.onerror = (error) => {\r\n            console.error('WebSocket Error:', error);\r\n        };\r\n\r\n        connection.onclose = () => {\r\n            console.log('WebSocket connection closed.');\r\n            window.localStorage.removeItem('tableId');\r\n        };\r\n\r\n        // Cleanup when the component unmounts\r\n        return () => {\r\n            connection.close();\r\n            console.log('WebSocket connection closed on component unmount.');\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"playboard\">\r\n            <div className='board-border'>\r\n                <div className='board'>\r\n                    {/* Render players in the appropriate cells */}\r\n                    <div className='player player-1'>{players[0] || ''}</div>\r\n                    <div className='player player-2'>\r\n                        <div className='cards-div'>\r\n                            {players[1] || ''}\r\n                        </div>\r\n                    </div>\r\n                    <div className='player player-3'>{players[2] || ''}</div>\r\n                    <div className='player player-4'>{players[3] || ''}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='panel'>\r\n                <button className='panel-btn fold'>Fold</button>\r\n                <button className='panel-btn call'>Call</button>\r\n                <button className='panel-btn raise'>Raise</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Playboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}