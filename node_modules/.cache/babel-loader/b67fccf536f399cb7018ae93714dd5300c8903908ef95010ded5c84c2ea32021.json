{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\Playboard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './playboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playboard = () => {\n  _s();\n  const [players, setPlayers] = useState([]); // Array to hold player objects\n  const [myCards, setMyCards] = useState(null); // Initialize with null\n  const [mySecondCard, setMySecodnCard] = useState(null);\n  useEffect(() => {\n    const connection = new WebSocket('ws://localhost:8080');\n    connection.onopen = e => {\n      console.log('WebSocket connection established.');\n      const playerName = window.localStorage.getItem('playerName');\n      const tableId = window.localStorage.getItem('tableId');\n      connection.send(JSON.stringify({\n        action: 'playGame',\n        playerName: playerName,\n        tableId: tableId\n      }));\n    };\n    connection.onmessage = e => {\n      try {\n        const data = JSON.parse(e.data);\n        console.log('Parsed data:', data);\n        if (data.players) {\n          const coinAmount = 1000;\n          const playerData = data.players.map(p => ({\n            playerName: p.playerName,\n            playerCoin: coinAmount\n          }));\n          const storedPlayerName = window.localStorage.getItem('playerName');\n          const startIndex = playerData.findIndex(p => p.playerName === storedPlayerName);\n          if (startIndex !== -1) {\n            const reorderedPlayers = [...playerData.slice(startIndex), ...playerData.slice(0, startIndex)];\n            setPlayers(reorderedPlayers);\n          } else {\n            setPlayers(playerData);\n          }\n        }\n        if (data.card) {\n          setMyCards(data.card[0]);\n          setMySecodnCard(data.card[1]);\n        }\n      } catch (error) {\n        console.error('Error parsing data:', error);\n      }\n    };\n    connection.onerror = error => {\n      console.error('WebSocket Error:', error);\n    };\n    connection.onclose = () => {\n      console.log('WebSocket connection closed.');\n      window.localStorage.removeItem('tableId');\n    };\n    return () => {\n      connection.close();\n      console.log('WebSocket connection closed on component unmount.');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: players.map((player, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player player-${i}` // Add 'player-0' only to the first player\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"player-name\",\n            children: player.playerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"player-coins\",\n            children: [\"Coins: \", player.playerCoin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"panel-btn fold\",\n        children: \"Fold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"panel-btn call\",\n        children: \"Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"panel-btn raise\",\n        children: \"Raise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Playboard, \"YDG00gcV0uOM9XU5/7kxHKzIm6Q=\");\n_c = Playboard;\nexport default Playboard;\nvar _c;\n$RefreshReg$(_c, \"Playboard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Playboard","_s","players","setPlayers","myCards","setMyCards","mySecondCard","setMySecodnCard","connection","WebSocket","onopen","e","console","log","playerName","window","localStorage","getItem","tableId","send","JSON","stringify","action","onmessage","data","parse","coinAmount","playerData","map","p","playerCoin","storedPlayerName","startIndex","findIndex","reorderedPlayers","slice","card","error","onerror","onclose","removeItem","close","className","children","player","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/Playboard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport cardsType from '../types';\r\nimport './playboard.css';\r\n\r\nconst Playboard = () => {\r\n    const [players, setPlayers] = useState<{ playerName: string; playerCoin: number }[]>([]); // Array to hold player objects\r\n    const [myCards, setMyCards] = useState<cardsType | null>(null); // Initialize with null\r\n    const [mySecondCard, setMySecodnCard] = useState<cardsType | null>(null);\r\n\r\n    useEffect(() => {\r\n        const connection = new WebSocket('ws://localhost:8080');\r\n\r\n        connection.onopen = (e) => {\r\n            console.log('WebSocket connection established.');\r\n            const playerName = window.localStorage.getItem('playerName');\r\n            const tableId = window.localStorage.getItem('tableId');\r\n            connection.send(JSON.stringify({ action: 'playGame', playerName: playerName, tableId: tableId }));\r\n        };\r\n\r\n        connection.onmessage = (e) => {\r\n            try {\r\n                const data = JSON.parse(e.data);\r\n                console.log('Parsed data:', data);\r\n\r\n                if (data.players) {\r\n                    const coinAmount = 1000;\r\n                    const playerData = data.players.map((p: any) => ({\r\n                        playerName: p.playerName,\r\n                        playerCoin: coinAmount,\r\n                    }));\r\n\r\n                    const storedPlayerName = window.localStorage.getItem('playerName');\r\n                    const startIndex = playerData.findIndex((p: any) => p.playerName === storedPlayerName);\r\n\r\n                    if (startIndex !== -1) {\r\n                        const reorderedPlayers = [\r\n                            ...playerData.slice(startIndex),\r\n                            ...playerData.slice(0, startIndex),\r\n                        ];\r\n                        setPlayers(reorderedPlayers);\r\n                    } else {\r\n                        setPlayers(playerData);\r\n                    }\r\n                }\r\n\r\n                if (data.card) {\r\n                    setMyCards(data.card[0]);\r\n                    setMySecodnCard(data.card[1]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error parsing data:', error);\r\n            }\r\n        };\r\n\r\n        connection.onerror = (error) => {\r\n            console.error('WebSocket Error:', error);\r\n        };\r\n\r\n        connection.onclose = () => {\r\n            console.log('WebSocket connection closed.');\r\n            window.localStorage.removeItem('tableId');\r\n        };\r\n\r\n        return () => {\r\n            connection.close();\r\n            console.log('WebSocket connection closed on component unmount.');\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"playboard\">\r\n            <div className='board-border'>\r\n                <div className='board'>\r\n                    {players.map((player, i) => (\r\n                        <div\r\n                            key={i}\r\n                            className={`player player-${i}`} // Add 'player-0' only to the first player\r\n                        >\r\n                            <h1 className='player-name'>{player.playerName}</h1>\r\n                            <p className='player-coins'>Coins: {player.playerCoin}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className='panel'>\r\n                <button className='panel-btn fold'>Fold</button>\r\n                <button className='panel-btn call'>Call</button>\r\n                <button className='panel-btn raise'>Raise</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Playboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}