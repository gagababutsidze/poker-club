{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\PokerComponent.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { connectWebSocket, sendMessage, addMessageListener, closeWebSocket } from '../ws';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokerComponent = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const playerName = window.localStorage.getItem('playerName');\n  const [test, setTest] = useState(null);\n  const navigate = useNavigate();\n  _s(useEffect(_s(() => {\n    _s();\n    /*  const connection = new WebSocket(\"ws://localhost:8080\")\r\n      \r\n      connection.onopen = () => {\r\n          console.log('open');\r\n          connection.send(JSON.stringify({playerName: playerName, action : 'joinGame'}))\r\n          \r\n      }\r\n      connection.onmessage = (e) => {\r\n          const data = JSON.parse(e.data);\r\n          console.log(e.data);\r\n          \r\n          setTest(data.message)\r\n            if(data.tableId) {\r\n              window.localStorage.setItem('tableId', data.tableId)\r\n              navigate(`/play/${data.tableId}`)\r\n          }\r\n      } */\n\n    useEffect(() => {\n      const initiateWebSocket = async () => {\n        try {\n          const wss = await connectWebSocket('ws://localhost:8080');\n          sendMessage({\n            playerName: playerName,\n            action: 'joinGame'\n          });\n          addMessageListener(data => {\n            console.log('PokerComponent received:', data);\n            setTest(data.message);\n            if (data.tableId) {\n              window.localStorage.setItem('tableId', data.tableId);\n              closeWebSocket(); // Close WebSocket before navigating\n              navigate(`/play/${data.tableId}`);\n            }\n          });\n        } catch (error) {\n          console.error('Failed to connect WebSocket:', error);\n        }\n      };\n      initiateWebSocket();\n      return () => {\n        closeWebSocket(); // Clean up WebSocket on unmount\n      };\n    }, []);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: test\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s2(PokerComponent, \"W18oLr79ZZrxc1flfwe3nbff5yQ=\", false, function () {\n  return [useNavigate];\n});\n_c = PokerComponent;\nexport default PokerComponent;\nvar _c;\n$RefreshReg$(_c, \"PokerComponent\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","connectWebSocket","sendMessage","addMessageListener","closeWebSocket","jsxDEV","_jsxDEV","PokerComponent","_s2","_s","$RefreshSig$","playerName","window","localStorage","getItem","test","setTest","navigate","initiateWebSocket","wss","action","data","console","log","message","tableId","setItem","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/PokerComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { connectWebSocket, sendMessage, addMessageListener, closeWebSocket } from '../ws';\r\n\r\nconst PokerComponent = () => {\r\n    const playerName = window.localStorage.getItem('playerName');\r\n    const [test, setTest] = useState<string | null>(null);\r\n    const navigate = useNavigate();\r\n   \r\nuseEffect(() => {\r\n  /*  const connection = new WebSocket(\"ws://localhost:8080\")\r\n    \r\n    connection.onopen = () => {\r\n        console.log('open');\r\n        connection.send(JSON.stringify({playerName: playerName, action : 'joinGame'}))\r\n        \r\n    }\r\n    connection.onmessage = (e) => {\r\n        const data = JSON.parse(e.data);\r\n        console.log(e.data);\r\n        \r\n        setTest(data.message)\r\n\r\n        if(data.tableId) {\r\n            window.localStorage.setItem('tableId', data.tableId)\r\n            navigate(`/play/${data.tableId}`)\r\n        }\r\n    } */\r\n\r\n        useEffect(() => {\r\n          const initiateWebSocket = async () => {\r\n              try {\r\n                  const wss = await connectWebSocket('ws://localhost:8080');\r\n                  sendMessage({ playerName: playerName, action: 'joinGame' });\r\n      \r\n                  addMessageListener((data: any) => {\r\n                      console.log('PokerComponent received:', data);\r\n                      setTest(data.message);\r\n      \r\n                      if (data.tableId) {\r\n                          window.localStorage.setItem('tableId', data.tableId);\r\n                          closeWebSocket(); // Close WebSocket before navigating\r\n                          navigate(`/play/${data.tableId}`);\r\n                      }\r\n                  });\r\n              } catch (error) {\r\n                  console.error('Failed to connect WebSocket:', error);\r\n              }\r\n          };\r\n      \r\n          initiateWebSocket();\r\n      \r\n          return () => {\r\n              closeWebSocket(); // Clean up WebSocket on unmount\r\n          };\r\n      }, []);\r\n      \r\n      \r\n  }, [])\r\n   \r\n    \r\n    \r\n    return (\r\n        <div >\r\n            <h1>{test}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default PokerComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,cAAc,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1F,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACzB,MAAMC,UAAU,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAgB,IAAI,CAAC;EACrD,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAElCS,EAAA,CAAAX,SAAS,CAAAW,EAAA,CAAC,MAAM;IAAAA,EAAA;IACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGQX,SAAS,CAAC,MAAM;MACd,MAAMoB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;QAClC,IAAI;UACA,MAAMC,GAAG,GAAG,MAAMlB,gBAAgB,CAAC,qBAAqB,CAAC;UACzDC,WAAW,CAAC;YAAES,UAAU,EAAEA,UAAU;YAAES,MAAM,EAAE;UAAW,CAAC,CAAC;UAE3DjB,kBAAkB,CAAEkB,IAAS,IAAK;YAC9BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,IAAI,CAAC;YAC7CL,OAAO,CAACK,IAAI,CAACG,OAAO,CAAC;YAErB,IAAIH,IAAI,CAACI,OAAO,EAAE;cACdb,MAAM,CAACC,YAAY,CAACa,OAAO,CAAC,SAAS,EAAEL,IAAI,CAACI,OAAO,CAAC;cACpDrB,cAAc,CAAC,CAAC,CAAC,CAAC;cAClBa,QAAQ,CAAC,SAASI,IAAI,CAACI,OAAO,EAAE,CAAC;YACrC;UACJ,CAAC,CAAC;QACN,CAAC,CAAC,OAAOE,KAAK,EAAE;UACZL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACxD;MACJ,CAAC;MAEDT,iBAAiB,CAAC,CAAC;MAEnB,OAAO,MAAM;QACTd,cAAc,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC;IACL,CAAC,EAAE,EAAE,CAAC;EAGV,CAAC,mCAAE,EAAE,CAAC;EAIJ,oBACIE,OAAA;IAAAsB,QAAA,eACItB,OAAA;MAAAsB,QAAA,EAAKb;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAACxB,GAAA,CA/DID,cAAc;EAAA,QAGCP,WAAW;AAAA;AAAAiC,EAAA,GAH1B1B,cAAc;AAkEpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}