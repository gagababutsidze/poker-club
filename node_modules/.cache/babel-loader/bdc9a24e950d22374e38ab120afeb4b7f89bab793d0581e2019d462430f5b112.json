{"ast":null,"code":"/*import React, { createContext, useContext, useRef } from 'react';\r\n\r\nconst WebSocketContext = createContext<{\r\n    ws: WebSocket | null;\r\n    initializeWebSocket: () => void;\r\n} | null>(null);\r\n\r\nexport const WebSocketProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const wsRef = useRef<WebSocket | null>(null);\r\n\r\n   const  initializeWebSocket = () => {\r\n        if (!wsRef.current) {\r\n            wsRef.current = new WebSocket('ws://localhost:8080');\r\n            wsRef.current.onopen = () => { console.log('WebSocket connection established.');}\r\n            wsRef.current.onclose = () => console.log('WebSocket closed.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <WebSocketContext.Provider value={{ ws: wsRef.current, initializeWebSocket }}>\r\n            {children}\r\n        </WebSocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useWebSocket = () => {\r\n    const context = useContext(WebSocketContext);\r\n    if (!context) throw new Error(\"WebSocketContext must be used within a WebSocketProvider\");\r\n    return context;\r\n};\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/gaga/Desktop/poker-club/src/WebSocketContext.tsx"],"sourcesContent":["/*import React, { createContext, useContext, useRef } from 'react';\r\n\r\nconst WebSocketContext = createContext<{\r\n    ws: WebSocket | null;\r\n    initializeWebSocket: () => void;\r\n} | null>(null);\r\n\r\nexport const WebSocketProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const wsRef = useRef<WebSocket | null>(null);\r\n\r\n   const  initializeWebSocket = () => {\r\n        if (!wsRef.current) {\r\n            wsRef.current = new WebSocket('ws://localhost:8080');\r\n            wsRef.current.onopen = () => { console.log('WebSocket connection established.');}\r\n            wsRef.current.onclose = () => console.log('WebSocket closed.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <WebSocketContext.Provider value={{ ws: wsRef.current, initializeWebSocket }}>\r\n            {children}\r\n        </WebSocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useWebSocket = () => {\r\n    const context = useContext(WebSocketContext);\r\n    if (!context) throw new Error(\"WebSocketContext must be used within a WebSocketProvider\");\r\n    return context;\r\n};\r\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}