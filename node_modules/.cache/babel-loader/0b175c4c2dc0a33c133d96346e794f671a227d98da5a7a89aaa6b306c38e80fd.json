{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\Playboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\n//import { useWebSocket } from '../WebSocketContext';\nimport './playboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playboard = () => {\n  _s();\n  const connection = useRef(null);\n  const [pot, setPot] = useState(0);\n  const [players, setPlayers] = useState([]);\n  const [dealer, setDealer] = useState(null);\n  const playerName = window.localStorage.getItem('playerName');\n  const tableId = window.localStorage.getItem('tableId');\n  const connectWebSocket = () => {\n    if (!connection.current) {\n      connection.current = new WebSocket('wss://your-websocket-url'); // Add your WebSocket URL here\n\n      connection.current.onopen = () => {\n        var _connection$current;\n        console.log('WebSocket connected');\n        (_connection$current = connection.current) === null || _connection$current === void 0 ? void 0 : _connection$current.send(JSON.stringify({\n          action: 'playGame',\n          playerName,\n          tableId\n        }));\n      };\n      connection.current.onmessage = e => {\n        const data = JSON.parse(e.data);\n        console.log(\"Received data:\", data);\n\n        // Handle various WebSocket message types\n        if (data.action === 'set-small-blind') {\n          console.log(\"You are the small blind\");\n        }\n        if (data.players) {\n          const updatedPlayers = data.players.map(p => ({\n            playerName: p.playerName,\n            playerCoin: p.playerCoin,\n            dealer: p.playerName === data.dealer\n          }));\n          setPlayers(updatedPlayers.map(p => p.playerName));\n          setCoins(updatedPlayers.map(p => p.playerCoin));\n          setDealer(data.dealer);\n        }\n        if (data.card) {\n          setMyCards(data.card[0]);\n          setMySecondCard(data.card[1]);\n        }\n        if (data.pot !== undefined) setPot(data.pot);\n      };\n    }\n  };\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup on component unmount\n    return () => {\n      var _connection$current2;\n      (_connection$current2 = connection.current) === null || _connection$current2 === void 0 ? void 0 : _connection$current2.close();\n      connection.current = null;\n    };\n  }, []);\n  useEffect(() => {\n    var _connection$current3;\n    if (((_connection$current3 = connection.current) === null || _connection$current3 === void 0 ? void 0 : _connection$current3.readyState) === WebSocket.OPEN) {\n      connection.current.send(JSON.stringify({\n        action: 'set-small-blind',\n        playerName,\n        tableId\n      }));\n    }\n  }, [players, dealer, pot]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player player-${index + 1}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"player-name\",\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), dealer === player && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"(Dealer)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 51\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pot\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Pot: \", pot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Playboard, \"WLjFLK/tEgcJL7WoeaRmrzKhMYA=\");\n_c = Playboard;\nexport default Playboard;\nvar _c;\n$RefreshReg$(_c, \"Playboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Playboard","_s","connection","pot","setPot","players","setPlayers","dealer","setDealer","playerName","window","localStorage","getItem","tableId","connectWebSocket","current","WebSocket","onopen","_connection$current","console","log","send","JSON","stringify","action","onmessage","e","data","parse","updatedPlayers","map","p","playerCoin","setCoins","card","setMyCards","setMySecondCard","undefined","_connection$current2","close","_connection$current3","readyState","OPEN","className","children","player","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/Playboard.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n//import { useWebSocket } from '../WebSocketContext';\r\nimport './playboard.css';\r\n\r\nconst Playboard = () => {\r\n    const connection = useRef<WebSocket | null>(null);\r\n    const [pot, setPot] = useState<number>(0);\r\n    const [players, setPlayers] = useState<string[]>([]);\r\n    const [dealer, setDealer] = useState<string | null>(null);\r\n    \r\n\r\n    const playerName = window.localStorage.getItem('playerName');\r\n    const tableId = window.localStorage.getItem('tableId');\r\n\r\n   \r\n    const connectWebSocket = () => {\r\n        if (!connection.current) {\r\n            connection.current = new WebSocket('wss://your-websocket-url'); // Add your WebSocket URL here\r\n            \r\n            connection.current.onopen = () => {\r\n                console.log('WebSocket connected');\r\n                connection.current?.send(JSON.stringify({\r\n                    action: 'playGame', \r\n                    playerName,\r\n                    tableId\r\n                }));\r\n            };\r\n\r\n            connection.current.onmessage = (e) => {\r\n                const data = JSON.parse(e.data);\r\n                console.log(\"Received data:\", data);\r\n\r\n                // Handle various WebSocket message types\r\n                if (data.action === 'set-small-blind') {\r\n                    console.log(\"You are the small blind\");\r\n                }\r\n\r\n                if (data.players) {\r\n                    const updatedPlayers = data.players.map((p: any) => ({\r\n                        playerName: p.playerName,\r\n                        playerCoin: p.playerCoin,\r\n                        dealer: p.playerName === data.dealer,\r\n                    }));\r\n\r\n                    setPlayers(updatedPlayers.map(p => p.playerName));\r\n                    setCoins(updatedPlayers.map(p => p.playerCoin));\r\n                    setDealer(data.dealer);\r\n                }\r\n\r\n                if (data.card) {\r\n                    setMyCards(data.card[0]);\r\n                    setMySecondCard(data.card[1]);\r\n                }\r\n\r\n                if (data.pot !== undefined) setPot(data.pot);\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        connectWebSocket();\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            connection.current?.close();\r\n            connection.current = null;\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (connection.current?.readyState === WebSocket.OPEN) {\r\n            connection.current.send(JSON.stringify({\r\n                action: 'set-small-blind', \r\n                playerName,\r\n                tableId\r\n            }));\r\n        }\r\n    }, [players, dealer, pot]);\r\n\r\n    return (\r\n        <div className=\"playboard\">\r\n            <div className=\"board-border\">\r\n                <div className=\"board\">\r\n                    {players.map((player, index) => (\r\n                        <div key={index} className={`player player-${index + 1}`}>\r\n                            <h2 className=\"player-name\">{player}</h2>\r\n                            {dealer === player && <h3>(Dealer)</h3>}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"pot\">\r\n                <h1>Pot: {pot}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Playboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}