{"ast":null,"code":"let websocket = null;\nconst messageQueue = []; // Queue to hold messages before the connection is open\n\nexport const connectWebSocket = url => {\n  return new Promise((resolve, reject) => {\n    websocket = new WebSocket(url);\n    websocket.onopen = () => {\n      console.log('WebSocket connection opened.');\n      // Send queued messages\n      while (messageQueue.length > 0) {\n        var _websocket;\n        (_websocket = websocket) === null || _websocket === void 0 ? void 0 : _websocket.send(JSON.stringify(messageQueue.shift()));\n      }\n      resolve(websocket);\n    };\n    websocket.onerror = error => {\n      console.error('WebSocket error:', error);\n      reject(error);\n    };\n    websocket.onclose = () => {\n      console.log('WebSocket connection closed.');\n      websocket = null;\n    };\n  });\n};\nexport const sendMessage = message => {\n  if (websocket && websocket.readyState === WebSocket.OPEN) {\n    websocket.send(JSON.stringify(message));\n  } else {\n    console.warn('WebSocket is not open. Message queued:', message);\n    messageQueue.push(message); // Queue the message if WebSocket is not ready\n  }\n};\nexport const closeWebSocket = () => {\n  if (websocket) {\n    websocket.close();\n    websocket = null;\n  }\n};","map":{"version":3,"names":["websocket","messageQueue","connectWebSocket","url","Promise","resolve","reject","WebSocket","onopen","console","log","length","_websocket","send","JSON","stringify","shift","onerror","error","onclose","sendMessage","message","readyState","OPEN","warn","push","closeWebSocket","close"],"sources":["C:/Users/gaga/Desktop/poker-club/src/ws.js"],"sourcesContent":["let websocket: WebSocket | null = null;\r\nconst messageQueue: any[] = []; // Queue to hold messages before the connection is open\r\n\r\nexport const connectWebSocket = (url: string): Promise<WebSocket> => {\r\n    return new Promise((resolve, reject) => {\r\n        websocket = new WebSocket(url);\r\n\r\n        websocket.onopen = () => {\r\n            console.log('WebSocket connection opened.');\r\n            // Send queued messages\r\n            while (messageQueue.length > 0) {\r\n                websocket?.send(JSON.stringify(messageQueue.shift()));\r\n            }\r\n            resolve(websocket);\r\n        };\r\n\r\n        websocket.onerror = (error) => {\r\n            console.error('WebSocket error:', error);\r\n            reject(error);\r\n        };\r\n\r\n        websocket.onclose = () => {\r\n            console.log('WebSocket connection closed.');\r\n            websocket = null;\r\n        };\r\n    });\r\n};\r\n\r\nexport const sendMessage = (message: any) => {\r\n    if (websocket && websocket.readyState === WebSocket.OPEN) {\r\n        websocket.send(JSON.stringify(message));\r\n    } else {\r\n        console.warn('WebSocket is not open. Message queued:', message);\r\n        messageQueue.push(message); // Queue the message if WebSocket is not ready\r\n    }\r\n};\r\n\r\nexport const closeWebSocket = () => {\r\n    if (websocket) {\r\n        websocket.close();\r\n        websocket = null;\r\n    }\r\n};\r\n"],"mappings":"AAAA,IAAIA,SAA2B,GAAG,IAAI;AACtC,MAAMC,YAAmB,GAAG,EAAE,CAAC,CAAC;;AAEhC,OAAO,MAAMC,gBAAgB,GAAIC,GAAW,IAAyB;EACjE,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCN,SAAS,GAAG,IAAIO,SAAS,CAACJ,GAAG,CAAC;IAE9BH,SAAS,CAACQ,MAAM,GAAG,MAAM;MACrBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;MACA,OAAOT,YAAY,CAACU,MAAM,GAAG,CAAC,EAAE;QAAA,IAAAC,UAAA;QAC5B,CAAAA,UAAA,GAAAZ,SAAS,cAAAY,UAAA,uBAATA,UAAA,CAAWC,IAAI,CAACC,IAAI,CAACC,SAAS,CAACd,YAAY,CAACe,KAAK,CAAC,CAAC,CAAC,CAAC;MACzD;MACAX,OAAO,CAACL,SAAS,CAAC;IACtB,CAAC;IAEDA,SAAS,CAACiB,OAAO,GAAIC,KAAK,IAAK;MAC3BT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCZ,MAAM,CAACY,KAAK,CAAC;IACjB,CAAC;IAEDlB,SAAS,CAACmB,OAAO,GAAG,MAAM;MACtBV,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CV,SAAS,GAAG,IAAI;IACpB,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMoB,WAAW,GAAIC,OAAY,IAAK;EACzC,IAAIrB,SAAS,IAAIA,SAAS,CAACsB,UAAU,KAAKf,SAAS,CAACgB,IAAI,EAAE;IACtDvB,SAAS,CAACa,IAAI,CAACC,IAAI,CAACC,SAAS,CAACM,OAAO,CAAC,CAAC;EAC3C,CAAC,MAAM;IACHZ,OAAO,CAACe,IAAI,CAAC,wCAAwC,EAAEH,OAAO,CAAC;IAC/DpB,YAAY,CAACwB,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC;EAChC;AACJ,CAAC;AAED,OAAO,MAAMK,cAAc,GAAGA,CAAA,KAAM;EAChC,IAAI1B,SAAS,EAAE;IACXA,SAAS,CAAC2B,KAAK,CAAC,CAAC;IACjB3B,SAAS,GAAG,IAAI;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}