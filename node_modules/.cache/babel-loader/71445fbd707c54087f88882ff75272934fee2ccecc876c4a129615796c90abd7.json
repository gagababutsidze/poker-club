{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\Playboard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './playboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playboard = () => {\n  _s();\n  const [players, setPlayers] = useState([]); // Array to hold player names\n  const [myCards, setMyCards] = useState(null); // Initialize with null\n  const [mySecondCard, setMySecodnCard] = useState(null);\n  const [coins, setCoins] = useState([]);\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    const connection = new WebSocket('ws://localhost:8080');\n    connection.onopen = e => {\n      console.log('WebSocket connection established.');\n      const playerName = window.localStorage.getItem('playerName');\n      const tableId = window.localStorage.getItem('tableId');\n      connection.send(JSON.stringify({\n        action: 'playGame',\n        playerName: playerName,\n        tableId: tableId\n      }));\n    };\n    try {\n      connection.onmessage = e => {\n        try {\n          const data = JSON.parse(e.data);\n          console.log('Parsed data:', data);\n\n          // Check if 'users' data exists\n          if (data.players) {\n            // Extract player names from the data\n            const playerNames = data.players.map(p => p.playerName);\n            const playerCoins = data.players.map(p => p.playerCoin);\n            const playerImages = data.player.map(p => p.playerImage);\n\n            // Get the playerName from localStorage\n            const storedPlayerName = window.localStorage.getItem('playerName');\n\n            // Find the index of the stored player name in the players array\n            const startIndex = playerNames.findIndex(name => name === storedPlayerName);\n\n            // If the player's name exists in the array, reorder the array\n            if (startIndex !== -1) {\n              const reorderedPlayers = [...playerNames.slice(startIndex), ...playerNames.slice(0, startIndex)];\n              setCoins(playerCoins);\n              setImages(playerImages);\n              setPlayers(reorderedPlayers);\n            } else {\n              // If the player's name is not found, just set the original array\n              setPlayers(playerNames);\n            }\n          }\n\n          // Check if 'card' data exists\n          if (data.card) {\n            setMyCards(data.card[0]);\n            setMySecodnCard(data.card[1]);\n          }\n        } catch (error) {\n          console.error('Error parsing data:', error);\n          console.log('Raw data received:', e.data);\n        }\n      };\n    } catch (error) {\n      console.log(error);\n    }\n    connection.onerror = error => {\n      console.error('WebSocket Error:', error);\n    };\n    connection.onclose = () => {\n      console.log('WebSocket connection closed.');\n      window.localStorage.removeItem('tableId');\n    };\n\n    // Cleanup when the component unmounts\n    return () => {\n      connection.close();\n      console.log('WebSocket connection closed on component unmount.');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player player-1\",\n          children: [images && images[2] ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(images[2]),\n            alt: \"Player 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this) : null, myCards && myCards.card_link && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-imagine-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-imagine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-imagine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"player-name\",\n            children: players[2] || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: coins[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player player-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards-div\",\n            children: [myCards && myCards.card_link && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card first-card\",\n              src: require(`../cards/${myCards.card_link}`),\n              alt: \"First Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), mySecondCard && mySecondCard.card_link && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card first-card\",\n              src: require(`../cards/${mySecondCard.card_link}`),\n              alt: \"Second Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"player-name\",\n            children: players[0] || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: coins[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n};\n_s(Playboard, \"3ZHVNbuT8ptuL+oZktm+boqD4cw=\");\n_c = Playboard;\nexport default Playboard;\nvar _c;\n$RefreshReg$(_c, \"Playboard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Playboard","_s","players","setPlayers","myCards","setMyCards","mySecondCard","setMySecodnCard","coins","setCoins","images","setImages","connection","WebSocket","onopen","e","console","log","playerName","window","localStorage","getItem","tableId","send","JSON","stringify","action","onmessage","data","parse","playerNames","map","p","playerCoins","playerCoin","playerImages","player","playerImage","storedPlayerName","startIndex","findIndex","name","reorderedPlayers","slice","card","error","onerror","onclose","removeItem","close","className","children","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","card_link","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/Playboard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport cardsType from '../types';\r\nimport './playboard.css';\r\n\r\nconst Playboard = () => {\r\n    const [players, setPlayers] = useState<string[]>([]); // Array to hold player names\r\n    const [myCards, setMyCards] = useState<cardsType | null>(null); // Initialize with null\r\n    const [mySecondCard, setMySecodnCard] = useState<cardsType | null>(null);\r\n      const [coins, setCoins] = useState<string[]>([]);\r\n      const [images, setImages] = useState<string[]>([]);\r\n    useEffect(() => {\r\n        const connection = new WebSocket('ws://localhost:8080');\r\n\r\n        connection.onopen = (e) => {\r\n            console.log('WebSocket connection established.');\r\n            const playerName = window.localStorage.getItem('playerName');\r\n            const tableId = window.localStorage.getItem('tableId');\r\n            connection.send(JSON.stringify({ action: 'playGame', playerName: playerName, tableId: tableId }));\r\n        };\r\n\r\n        try {\r\n            connection.onmessage = (e) => {\r\n                try {\r\n                    const data = JSON.parse(e.data);\r\n                    console.log('Parsed data:', data);\r\n\r\n                    // Check if 'users' data exists\r\n                    if (data.players) {\r\n                        // Extract player names from the data\r\n                        const playerNames = data.players.map((p: any) => p.playerName);\r\n                        \r\n                        const playerCoins = data.players.map((p: any) => p.playerCoin);\r\n\r\n                        const playerImages = data.player.map((p:any) => p.playerImage)\r\n\r\n\r\n                        // Get the playerName from localStorage\r\n                        const storedPlayerName = window.localStorage.getItem('playerName');\r\n\r\n                        // Find the index of the stored player name in the players array\r\n                        const startIndex = playerNames.findIndex((name: string) => name === storedPlayerName);\r\n\r\n                        // If the player's name exists in the array, reorder the array\r\n                        if (startIndex !== -1) {\r\n                            const reorderedPlayers = [\r\n                                ...playerNames.slice(startIndex),\r\n                                ...playerNames.slice(0, startIndex)\r\n                            ];\r\n                            setCoins(playerCoins)\r\n                            setImages(playerImages)\r\n                            setPlayers(reorderedPlayers);\r\n                        } else {\r\n                            // If the player's name is not found, just set the original array\r\n                            setPlayers(playerNames);\r\n                        }\r\n                    }\r\n\r\n               \r\n\r\n                    // Check if 'card' data exists\r\n                    if (data.card) {\r\n                        setMyCards(data.card[0]);\r\n                        setMySecodnCard(data.card[1])\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error parsing data:', error);\r\n                    console.log('Raw data received:', e.data);\r\n                }\r\n            };\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        connection.onerror = (error) => {\r\n            console.error('WebSocket Error:', error);\r\n        };\r\n\r\n        connection.onclose = () => {\r\n            console.log('WebSocket connection closed.');\r\n            window.localStorage.removeItem('tableId');\r\n        };\r\n\r\n        // Cleanup when the component unmounts\r\n        return () => {\r\n            connection.close();\r\n            console.log('WebSocket connection closed on component unmount.');\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n      <div className=\"playboard\">\r\n    <div className='board-border'>\r\n        <div className='board'>\r\n            <div className='player player-1'>\r\n                {images && images[2] ? (\r\n                    <img src={require(images[2])} alt=\"Player 1\" />\r\n                ) : null} \r\n                {myCards && myCards.card_link && (\r\n                    <div className='card-imagine-div'>\r\n                        <div className='card-imagine'></div>\r\n                        <div className='card-imagine'></div>\r\n                    </div>\r\n                )}\r\n                <h2 className='player-name'>{players[2] || ''}</h2>\r\n                <h2>{coins[2]}</h2>\r\n            </div>\r\n\r\n            <div className='player player-2'>\r\n                <div className='cards-div'>\r\n                    {myCards && myCards.card_link && (\r\n                        <img className='card first-card' src={require(`../cards/${myCards.card_link}`)} alt=\"First Card\" />\r\n                    )}\r\n                    {mySecondCard && mySecondCard.card_link && (\r\n                        <img className='card first-card' src={require(`../cards/${mySecondCard.card_link}`)} alt=\"Second Card\" />\r\n                    )}\r\n                </div>\r\n                <h2 className='player-name'>{players[0] || ''}</h2>\r\n                <h2>{coins[0]}</h2>\r\n            </div>\r\n\r\n            {/* Repeat similar checks for player 3 and player 4 if necessary */}\r\n        </div>\r\n    </div>\r\n</div>\r\n    );\r\n};\r\n\r\nexport default Playboard;\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAW,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAmB,IAAI,CAAC,CAAC,CAAC;EAChE,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAmB,IAAI,CAAC;EACtE,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAW,EAAE,CAAC;EAChD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAW,EAAE,CAAC;EACpDD,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEvDD,UAAU,CAACE,MAAM,GAAIC,CAAC,IAAK;MACvBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD,MAAMC,UAAU,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAC5D,MAAMC,OAAO,GAAGH,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MACtDT,UAAU,CAACW,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE,UAAU;QAAER,UAAU,EAAEA,UAAU;QAAEI,OAAO,EAAEA;MAAQ,CAAC,CAAC,CAAC;IACrG,CAAC;IAED,IAAI;MACAV,UAAU,CAACe,SAAS,GAAIZ,CAAC,IAAK;QAC1B,IAAI;UACA,MAAMa,IAAI,GAAGJ,IAAI,CAACK,KAAK,CAACd,CAAC,CAACa,IAAI,CAAC;UAC/BZ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEW,IAAI,CAAC;;UAEjC;UACA,IAAIA,IAAI,CAAC1B,OAAO,EAAE;YACd;YACA,MAAM4B,WAAW,GAAGF,IAAI,CAAC1B,OAAO,CAAC6B,GAAG,CAAEC,CAAM,IAAKA,CAAC,CAACd,UAAU,CAAC;YAE9D,MAAMe,WAAW,GAAGL,IAAI,CAAC1B,OAAO,CAAC6B,GAAG,CAAEC,CAAM,IAAKA,CAAC,CAACE,UAAU,CAAC;YAE9D,MAAMC,YAAY,GAAGP,IAAI,CAACQ,MAAM,CAACL,GAAG,CAAEC,CAAK,IAAKA,CAAC,CAACK,WAAW,CAAC;;YAG9D;YACA,MAAMC,gBAAgB,GAAGnB,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;;YAElE;YACA,MAAMkB,UAAU,GAAGT,WAAW,CAACU,SAAS,CAAEC,IAAY,IAAKA,IAAI,KAAKH,gBAAgB,CAAC;;YAErF;YACA,IAAIC,UAAU,KAAK,CAAC,CAAC,EAAE;cACnB,MAAMG,gBAAgB,GAAG,CACrB,GAAGZ,WAAW,CAACa,KAAK,CAACJ,UAAU,CAAC,EAChC,GAAGT,WAAW,CAACa,KAAK,CAAC,CAAC,EAAEJ,UAAU,CAAC,CACtC;cACD9B,QAAQ,CAACwB,WAAW,CAAC;cACrBtB,SAAS,CAACwB,YAAY,CAAC;cACvBhC,UAAU,CAACuC,gBAAgB,CAAC;YAChC,CAAC,MAAM;cACH;cACAvC,UAAU,CAAC2B,WAAW,CAAC;YAC3B;UACJ;;UAIA;UACA,IAAIF,IAAI,CAACgB,IAAI,EAAE;YACXvC,UAAU,CAACuB,IAAI,CAACgB,IAAI,CAAC,CAAC,CAAC,CAAC;YACxBrC,eAAe,CAACqB,IAAI,CAACgB,IAAI,CAAC,CAAC,CAAC,CAAC;UACjC;QACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZ7B,OAAO,CAAC6B,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;UAC3C7B,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,CAAC,CAACa,IAAI,CAAC;QAC7C;MACJ,CAAC;IACL,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACZ7B,OAAO,CAACC,GAAG,CAAC4B,KAAK,CAAC;IACtB;IAEAjC,UAAU,CAACkC,OAAO,GAAID,KAAK,IAAK;MAC5B7B,OAAO,CAAC6B,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC5C,CAAC;IAEDjC,UAAU,CAACmC,OAAO,GAAG,MAAM;MACvB/B,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CE,MAAM,CAACC,YAAY,CAAC4B,UAAU,CAAC,SAAS,CAAC;IAC7C,CAAC;;IAED;IACA,OAAO,MAAM;MACTpC,UAAU,CAACqC,KAAK,CAAC,CAAC;MAClBjC,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;IACpE,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKmD,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC5BpD,OAAA;MAAKmD,SAAS,EAAC,cAAc;MAAAC,QAAA,eACzBpD,OAAA;QAAKmD,SAAS,EAAC,OAAO;QAAAC,QAAA,gBAClBpD,OAAA;UAAKmD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAC3BzC,MAAM,IAAIA,MAAM,CAAC,CAAC,CAAC,gBAChBX,OAAA;YAAKqD,GAAG,EAAEC,OAAO,CAAC3C,MAAM,CAAC,CAAC,CAAC,CAAE;YAAC4C,GAAG,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,GAC/C,IAAI,EACPtD,OAAO,IAAIA,OAAO,CAACuD,SAAS,iBACzB5D,OAAA;YAAKmD,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC7BpD,OAAA;cAAKmD,SAAS,EAAC;YAAc;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACpC3D,OAAA;cAAKmD,SAAS,EAAC;YAAc;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CACR,eACD3D,OAAA;YAAImD,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEjD,OAAO,CAAC,CAAC,CAAC,IAAI;UAAE;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnD3D,OAAA;YAAAoD,QAAA,EAAK3C,KAAK,CAAC,CAAC;UAAC;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eAEN3D,OAAA;UAAKmD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BpD,OAAA;YAAKmD,SAAS,EAAC,WAAW;YAAAC,QAAA,GACrB/C,OAAO,IAAIA,OAAO,CAACuD,SAAS,iBACzB5D,OAAA;cAAKmD,SAAS,EAAC,iBAAiB;cAACE,GAAG,EAAEC,OAAO,CAAC,YAAYjD,OAAO,CAACuD,SAAS,EAAE,CAAE;cAACL,GAAG,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CACrG,EACApD,YAAY,IAAIA,YAAY,CAACqD,SAAS,iBACnC5D,OAAA;cAAKmD,SAAS,EAAC,iBAAiB;cAACE,GAAG,EAAEC,OAAO,CAAC,YAAY/C,YAAY,CAACqD,SAAS,EAAE,CAAE;cAACL,GAAG,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAC3G;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACN3D,OAAA;YAAImD,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEjD,OAAO,CAAC,CAAC,CAAC,IAAI;UAAE;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnD3D,OAAA;YAAAoD,QAAA,EAAK3C,KAAK,CAAC,CAAC;UAAC;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEN,CAAC;AAACzD,EAAA,CAzHID,SAAS;AAAA4D,EAAA,GAAT5D,SAAS;AA2Hf,eAAeA,SAAS;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}