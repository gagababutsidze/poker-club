{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\PokerComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Playboard from './Playboard';\n//import { useWebSocket } from '../WebSocketContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PokerComponent = () => {\n  _s();\n  const playerName = window.localStorage.getItem('playerName');\n  const [test, setTest] = useState(null);\n  const navigate = useNavigate();\n  const connection = useRef(null);\n  let [check, setCheck] = useState(false);\n  useEffect(() => {\n    let is = false;\n    if (!connection.current) {\n      connection.current = new WebSocket('ws://localhost:8080/lobby');\n      // Handle WebSocket events\n      connection.current.onopen = () => {\n        var _connection$current;\n        (_connection$current = connection.current) === null || _connection$current === void 0 ? void 0 : _connection$current.send(JSON.stringify({\n          playerName,\n          action: 'joinGame'\n        }));\n      };\n      connection.current.onmessage = e => {\n        var _data$table;\n        const data = JSON.parse(e.data);\n        console.log('PokerComponent received:', data);\n        setTest(data.message);\n        if (((_data$table = data.table) === null || _data$table === void 0 ? void 0 : _data$table.length) === 4) {\n          is = true;\n          setCheck(true);\n        }\n        if (data.tableId) {\n          window.localStorage.setItem('tableId', data.tableId);\n          //navigate(`/play/${data.tableId}`);\n        }\n        if (is) {\n          var _connection$current2, _connection$current3;\n          (_connection$current2 = connection.current) === null || _connection$current2 === void 0 ? void 0 : _connection$current2.send(JSON.stringify({\n            action: 'playGame',\n            playerName,\n            tableId: data.tableId\n          }));\n          (_connection$current3 = connection.current) === null || _connection$current3 === void 0 ? void 0 : _connection$current3.send(JSON.stringify({\n            action: 'set-small-blind',\n            playerName,\n            tableId: data.tableId\n          }));\n        }\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: check && connection.current ? /*#__PURE__*/_jsxDEV(Playboard, {\n      connection: connection.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Welcome to the Poker Game!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 93\n    }, this)\n  }, void 0, false);\n};\n_s(PokerComponent, \"lkc+/VnHzZrX/E6avzGAPcyVNlo=\", false, function () {\n  return [useNavigate];\n});\n_c = PokerComponent;\nexport default PokerComponent;\nvar _c;\n$RefreshReg$(_c, \"PokerComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","Playboard","jsxDEV","_jsxDEV","Fragment","_Fragment","PokerComponent","_s","playerName","window","localStorage","getItem","test","setTest","navigate","connection","check","setCheck","is","current","WebSocket","onopen","_connection$current","send","JSON","stringify","action","onmessage","e","_data$table","data","parse","console","log","message","table","length","tableId","setItem","_connection$current2","_connection$current3","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/PokerComponent.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Playboard from './Playboard';\r\n//import { useWebSocket } from '../WebSocketContext';\r\n\r\nconst PokerComponent = () => {\r\n    const playerName = window.localStorage.getItem('playerName');\r\n    const [test, setTest] = useState<string | null>(null);\r\n    const navigate = useNavigate();\r\n    const connection = useRef<WebSocket | null>(null);\r\n    let [check, setCheck] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        let is = false\r\n\r\n        if (!connection.current) {\r\n            connection.current = new WebSocket('ws://localhost:8080/lobby')\r\n            // Handle WebSocket events\r\n            connection.current.onopen = () => {\r\n               connection.current?.send(JSON.stringify({ playerName, action: 'joinGame' }));\r\n            };\r\n\r\n            connection.current.onmessage = (e:any) => {\r\n                const data = JSON.parse(e.data);\r\n                console.log('PokerComponent received:', data);\r\n                setTest(data.message);\r\n\r\n                if(data.table?.length === 4) {\r\n                    is = true\r\n                    setCheck(true)\r\n                }\r\n\r\n                if (data.tableId) {\r\n                    window.localStorage.setItem('tableId', data.tableId);\r\n                    //navigate(`/play/${data.tableId}`);\r\n                }\r\n                \r\n            if (is) {\r\n                connection.current?.send(JSON.stringify({\r\n                    action: 'playGame', \r\n                    playerName,\r\n                    tableId :data.tableId\r\n                }));\r\n\r\n                \r\n                    connection.current?.send(JSON.stringify({\r\n                        action: 'set-small-blind', \r\n                        playerName,\r\n                        tableId:data.tableId\r\n                    }))\r\n            }\r\n            };\r\n\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            check && connection.current ?  <Playboard connection={connection.current} />:   <div>\r\n            <h1>{test}</h1>\r\n            <h3>Welcome to the Poker Game!</h3>\r\n        </div>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PokerComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}