{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\WebSocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// WebSocketContext.tsx\nimport React, { createContext, useContext, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketContext = /*#__PURE__*/createContext(null);\nexport const WebSocketProvider = ({\n  children\n}) => {\n  _s();\n  const wsRef = useRef(null);\n  const [isWsConnected, setIsWsConnected] = useState(false); // Track connection status\n\n  useEffect(() => {\n    wsRef.current = new WebSocket('ws://localhost:8080');\n    wsRef.current.onopen = () => {\n      console.log('WebSocket connection established.');\n      setIsWsConnected(true); // Update connection status\n    };\n    wsRef.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    wsRef.current.onclose = () => {\n      console.log('WebSocket closed.');\n      setIsWsConnected(false);\n    };\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, []);\n\n  // Only render children when WebSocket is connected\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    value: isWsConnected ? wsRef.current : null,\n    children: isWsConnected ? children : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading WebSocket...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketProvider, \"B+HWHc+9e9Xm/vOv6YmCYTDnbpk=\");\n_c = WebSocketProvider;\nexport const useWebSocket = () => {\n  _s2();\n  return useContext(WebSocketContext);\n};\n_s2(useWebSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"WebSocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useRef","useState","jsxDEV","_jsxDEV","WebSocketContext","WebSocketProvider","children","_s","wsRef","isWsConnected","setIsWsConnected","current","WebSocket","onopen","console","log","onerror","error","onclose","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWebSocket","_s2","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/WebSocketContext.tsx"],"sourcesContent":["// WebSocketContext.tsx\r\nimport React, { createContext, useContext, useEffect, useRef, useState } from 'react';\r\n\r\nconst WebSocketContext = createContext<WebSocket | null>(null);\r\n\r\nexport const WebSocketProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const wsRef = useRef<WebSocket | null>(null);\r\n  const [isWsConnected, setIsWsConnected] = useState(false); // Track connection status\r\n\r\n  useEffect(() => {\r\n    wsRef.current = new WebSocket('ws://localhost:8080');\r\n\r\n    wsRef.current.onopen = () => {\r\n      console.log('WebSocket connection established.');\r\n      setIsWsConnected(true); // Update connection status\r\n    };\r\n\r\n    wsRef.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n    };\r\n\r\n    wsRef.current.onclose = () => {\r\n      console.log('WebSocket closed.');\r\n      setIsWsConnected(false);\r\n    };\r\n\r\n    return () => {\r\n      if (wsRef.current) {\r\n        wsRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Only render children when WebSocket is connected\r\n  return (\r\n    <WebSocketContext.Provider value={isWsConnected ? wsRef.current : null}>\r\n      {isWsConnected ? children : <div>Loading WebSocket...</div>}\r\n    </WebSocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useWebSocket = () => useContext(WebSocketContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,gBAAgB,gBAAGP,aAAa,CAAmB,IAAI,CAAC;AAE9D,OAAO,MAAMQ,iBAA0D,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1F,MAAMC,KAAK,GAAGR,MAAM,CAAmB,IAAI,CAAC;EAC5C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3DF,SAAS,CAAC,MAAM;IACdS,KAAK,CAACG,OAAO,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEpDJ,KAAK,CAACG,OAAO,CAACE,MAAM,GAAG,MAAM;MAC3BC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChDL,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEDF,KAAK,CAACG,OAAO,CAACK,OAAO,GAAIC,KAAK,IAAK;MACjCH,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAEDT,KAAK,CAACG,OAAO,CAACO,OAAO,GAAG,MAAM;MAC5BJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChCL,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC;IAED,OAAO,MAAM;MACX,IAAIF,KAAK,CAACG,OAAO,EAAE;QACjBH,KAAK,CAACG,OAAO,CAACQ,KAAK,CAAC,CAAC;MACvB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACEhB,OAAA,CAACC,gBAAgB,CAACgB,QAAQ;IAACC,KAAK,EAAEZ,aAAa,GAAGD,KAAK,CAACG,OAAO,GAAG,IAAK;IAAAL,QAAA,EACpEG,aAAa,GAAGH,QAAQ,gBAAGH,OAAA;MAAAG,QAAA,EAAK;IAAoB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEhC,CAAC;AAAClB,EAAA,CAlCWF,iBAA0D;AAAAqB,EAAA,GAA1DrB,iBAA0D;AAoCvE,OAAO,MAAMsB,YAAY,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM9B,UAAU,CAACM,gBAAgB,CAAC;AAAA;AAACwB,GAAA,CAAlDD,YAAY;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}