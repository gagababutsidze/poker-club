{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\PokerComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//import { useWebSocket } from '../WebSocketContext';\n\nconst PokerComponent = () => {\n  _s();\n  const playerName = window.localStorage.getItem('playerName');\n  const [test, setTest] = useState(null);\n  const navigate = useNavigate();\n  const connection = useRef(null);\n  let [check, setCheck] = useState(false);\n  useEffect(() => {\n    console.log('პოკერ კომპონენტი ჩაირთო');\n    let is = false;\n    if (!connection.current) {\n      connection.current = new WebSocket('ws://localhost:8080/join');\n      // Handle WebSocket events\n      connection.current.onopen = () => {\n        var _connection$current;\n        (_connection$current = connection.current) === null || _connection$current === void 0 ? void 0 : _connection$current.send(JSON.stringify({\n          playerName,\n          action: 'joinGame'\n        }));\n      };\n      connection.current.onmessage = e => {\n        const data = JSON.parse(e.data);\n        console.log('PokerComponent received:', data);\n        setTest(data.message);\n        if (data.tableId) {\n          var _connection$current2;\n          let test = (_connection$current2 = connection.current) === null || _connection$current2 === void 0 ? void 0 : _connection$current2.send(JSON.stringify({\n            playerName,\n            action: 'close connection'\n          }));\n          setTimeout(() => {\n            var _connection$current3;\n            (_connection$current3 = connection.current) === null || _connection$current3 === void 0 ? void 0 : _connection$current3.close();\n            console.log('WebSocket connection closed');\n          }, 100);\n          if (test) {}\n          window.localStorage.setItem('tableId', data.tableId);\n          navigate(`/play/${data.tableId}`);\n        }\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: test\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Welcome to the Poker Game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(PokerComponent, \"lkc+/VnHzZrX/E6avzGAPcyVNlo=\", false, function () {\n  return [useNavigate];\n});\n_c = PokerComponent;\nexport default PokerComponent;\nvar _c;\n$RefreshReg$(_c, \"PokerComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PokerComponent","_s","playerName","window","localStorage","getItem","test","setTest","navigate","connection","check","setCheck","console","log","is","current","WebSocket","onopen","_connection$current","send","JSON","stringify","action","onmessage","e","data","parse","message","tableId","_connection$current2","setTimeout","_connection$current3","close","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/PokerComponent.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Playboard from './Playboard';\r\n//import { useWebSocket } from '../WebSocketContext';\r\n\r\nconst PokerComponent = () => {\r\n    const playerName = window.localStorage.getItem('playerName');\r\n    const [test, setTest] = useState<string | null>(null);\r\n    const navigate = useNavigate();\r\n    const connection = useRef<WebSocket | null>(null);\r\n    let [check, setCheck] = useState(false)\r\n\r\n    useEffect(() => {\r\n                console.log('პოკერ კომპონენტი ჩაირთო');\r\n        let is = false\r\n\r\n        if (!connection.current) {\r\n            connection.current = new WebSocket('ws://localhost:8080/join')\r\n            // Handle WebSocket events\r\n            connection.current.onopen = () => {\r\n               connection.current?.send(JSON.stringify({ playerName, action: 'joinGame' }));\r\n            };\r\n\r\n            connection.current.onmessage = (e:any) => {\r\n                \r\n                const data = JSON.parse(e.data);\r\n                console.log('PokerComponent received:', data);\r\n                setTest(data.message);\r\n                if (data.tableId) {\r\n\r\n                    let test = connection.current?.send(JSON.stringify({ playerName, action: 'close connection' }));\r\n\r\n\r\n                    setTimeout(() => {\r\n                        connection.current?.close();\r\n                        console.log('WebSocket connection closed');\r\n                    }, 100);\r\n                    if (test) {\r\n                        \r\n                    }\r\n                    window.localStorage.setItem('tableId', data.tableId)\r\n                    navigate(`/play/${data.tableId}`)\r\n                }\r\n\r\n\r\n                \r\n            }\r\n\r\n  \r\n\r\n        }\r\n\r\n            \r\n     \r\n    }, []);    \r\n\r\n    return (\r\n        <>\r\n        \r\n           \r\n            <h1>{test}</h1>\r\n            <h3>Welcome to the Poker Game!</h3>\r\n       \r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PokerComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}