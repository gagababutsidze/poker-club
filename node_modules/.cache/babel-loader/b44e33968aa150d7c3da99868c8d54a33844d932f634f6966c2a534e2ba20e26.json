{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\WebSocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useRef } from 'react';\n\n// Context to share WebSocket connection across the app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketContext = /*#__PURE__*/createContext(null);\nexport const WebSocketProvider = ({\n  children\n}) => {\n  _s();\n  const connection = useRef(null);\n  useEffect(() => {\n    // Initialize WebSocket connection\n    if (!connection.current) {\n      connection.current = new WebSocket('ws://localhost:8080');\n    }\n\n    // Cleanup WebSocket connection when component unmounts\n    return () => {\n      var _connection$current;\n      (_connection$current = connection.current) === null || _connection$current === void 0 ? void 0 : _connection$current.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    value: connection.current,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketProvider, \"yek/JRnmbSIx45Cd1ZvTmIIko60=\");\n_c = WebSocketProvider;\nexport const useWebSocket = () => {\n  _s2();\n  return useContext(WebSocketContext);\n};\n_s2(useWebSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"WebSocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useRef","jsxDEV","_jsxDEV","WebSocketContext","WebSocketProvider","children","_s","connection","current","WebSocket","_connection$current","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWebSocket","_s2","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/WebSocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useRef } from 'react';\r\n\r\n// Context to share WebSocket connection across the app\r\nconst WebSocketContext = createContext<WebSocket | null>(null);\r\n\r\nexport const WebSocketProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const connection = useRef<WebSocket | null>(null);\r\n\r\n    useEffect(() => {\r\n        // Initialize WebSocket connection\r\n        if (!connection.current) {\r\n            connection.current = new WebSocket('ws://localhost:8080');\r\n        }\r\n\r\n        // Cleanup WebSocket connection when component unmounts\r\n        return () => {\r\n            connection.current?.close();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <WebSocketContext.Provider value={connection.current}>\r\n            {children}\r\n        </WebSocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useWebSocket = () => {\r\n    return useContext(WebSocketContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAE3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,gBAAGN,aAAa,CAAmB,IAAI,CAAC;AAE9D,OAAO,MAAMO,iBAA0D,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAMC,UAAU,GAAGP,MAAM,CAAmB,IAAI,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,CAACQ,UAAU,CAACC,OAAO,EAAE;MACrBD,UAAU,CAACC,OAAO,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAC7D;;IAEA;IACA,OAAO,MAAM;MAAA,IAAAC,mBAAA;MACT,CAAAA,mBAAA,GAAAH,UAAU,CAACC,OAAO,cAAAE,mBAAA,uBAAlBA,mBAAA,CAAoBC,KAAK,CAAC,CAAC;IAC/B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACC,gBAAgB,CAACS,QAAQ;IAACC,KAAK,EAAEN,UAAU,CAACC,OAAQ;IAAAH,QAAA,EAChDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEpC,CAAC;AAACX,EAAA,CApBWF,iBAA0D;AAAAc,EAAA,GAA1Dd,iBAA0D;AAsBvE,OAAO,MAAMe,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,OAAOtB,UAAU,CAACK,gBAAgB,CAAC;AACvC,CAAC;AAACiB,GAAA,CAFWD,YAAY;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}