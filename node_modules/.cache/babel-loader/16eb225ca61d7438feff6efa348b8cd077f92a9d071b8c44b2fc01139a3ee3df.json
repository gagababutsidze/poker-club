{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\Playboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\n//import { useWebSocket } from '../WebSocketContext';\nimport './playboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playboard = () => {\n  _s();\n  const connection = useRef(null);\n  const [pot, setPot] = useState(0);\n  const [players, setPlayers] = useState([]);\n  const [dealer, setDealer] = useState(null);\n  const playerName = window.localStorage.getItem('playerName');\n  const tableId = window.localStorage.getItem('tableId');\n  useEffect(() => {\n    if (!connection.current) {\n      con.onopen = () => {\n        connection.send(JSON.stringify({\n          action: 'playGame',\n          playerName,\n          tableId\n        }));\n      };\n      connection.onmessage = e => {\n        const data = JSON.parse(e.data);\n        console.log('Playboard received:', data);\n        if (data.action === 'updatePot') {\n          setPot(data.pot);\n        }\n        if (data.players) {\n          const updatedPlayers = data.players.map(p => ({\n            playerName: p.playerName,\n            isDealer: p.playerName === data.dealer\n          }));\n          const reorderedPlayers = updatedPlayers.map(p => p.playerName);\n          setPlayers(reorderedPlayers);\n          setDealer(data.dealer);\n        }\n      };\n    }\n  }, [connection, playerName, tableId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player player-${index + 1}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"player-name\",\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), dealer === player && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"(Dealer)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 51\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pot\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Pot: \", pot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Playboard, \"ylECi0I8OtD4F6el02XbJDlRmyA=\");\n_c = Playboard;\nexport default Playboard;\nvar _c;\n$RefreshReg$(_c, \"Playboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Playboard","_s","connection","pot","setPot","players","setPlayers","dealer","setDealer","playerName","window","localStorage","getItem","tableId","current","con","onopen","send","JSON","stringify","action","onmessage","e","data","parse","console","log","updatedPlayers","map","p","isDealer","reorderedPlayers","className","children","player","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/Playboard.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n//import { useWebSocket } from '../WebSocketContext';\r\nimport './playboard.css';\r\n\r\nconst Playboard = () => {\r\n    const connection = useRef<WebSocket | null>(null);\r\n    const [pot, setPot] = useState<number>(0);\r\n    const [players, setPlayers] = useState<string[]>([]);\r\n    const [dealer, setDealer] = useState<string | null>(null);\r\n\r\n    const playerName = window.localStorage.getItem('playerName');\r\n    const tableId = window.localStorage.getItem('tableId');\r\n\r\n    useEffect(() => {\r\n        if (!connection.current) {\r\n            con.onopen = () => {\r\n                connection.send(JSON.stringify({\r\n                    action: 'playGame',\r\n                    playerName,\r\n                    tableId,\r\n                }));\r\n            };\r\n\r\n            connection.onmessage = (e) => {\r\n                const data = JSON.parse(e.data);\r\n                console.log('Playboard received:', data);\r\n\r\n                if (data.action === 'updatePot') {\r\n                    setPot(data.pot);\r\n                }\r\n\r\n                if (data.players) {\r\n                    const updatedPlayers = data.players.map((p: any) => ({\r\n                        playerName: p.playerName,\r\n                        isDealer: p.playerName === data.dealer,\r\n                    }));\r\n\r\n                    const reorderedPlayers = updatedPlayers.map((p:any) => p.playerName);\r\n                    setPlayers(reorderedPlayers);\r\n                    setDealer(data.dealer);\r\n                }\r\n            };\r\n        }\r\n    }, [connection, playerName, tableId]);\r\n\r\n    return (\r\n        <div className=\"playboard\">\r\n            <div className=\"board-border\">\r\n                <div className=\"board\">\r\n                    {players.map((player, index) => (\r\n                        <div key={index} className={`player player-${index + 1}`}>\r\n                            <h2 className=\"player-name\">{player}</h2>\r\n                            {dealer === player && <h3>(Dealer)</h3>}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"pot\">\r\n                <h1>Pot: {pot}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Playboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}