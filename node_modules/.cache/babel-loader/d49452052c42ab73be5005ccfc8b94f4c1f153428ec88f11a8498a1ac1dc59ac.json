{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaga\\\\Desktop\\\\poker-club\\\\src\\\\pages\\\\PokerComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n//import { useWebSocket } from '../WebSocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokerComponent = () => {\n  _s();\n  const playerName = window.localStorage.getItem('playerName');\n  const [test, setTest] = useState(null);\n  const navigate = useNavigate();\n  const connection = useRef(null);\n  useEffect(() => {\n    if (!connection.current) {\n      connection.current = new WebSocket('ws://localhost:8080');\n      // Handle WebSocket events\n      connection.current.onopen = () => {\n        var _connection$current;\n        (_connection$current = connection.current) === null || _connection$current === void 0 ? void 0 : _connection$current.send(JSON.stringify({\n          playerName,\n          action: 'joinGame'\n        }));\n      };\n      connection.current.onmessage = e => {\n        const data = JSON.parse(e.data);\n        console.log('PokerComponent received:', data);\n        setTest(data.message);\n        if (data.table.lenght === 4) {}\n        if (data.tableId) {\n          window.localStorage.setItem('tableId', data.tableId);\n          navigate(`/play/${data.tableId}`);\n        }\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: test\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Welcome to the Poker Game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(PokerComponent, \"W/tuKdaJ7P7mc5JCUCa+qbE50eM=\", false, function () {\n  return [useNavigate];\n});\n_c = PokerComponent;\nexport default PokerComponent;\nvar _c;\n$RefreshReg$(_c, \"PokerComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","PokerComponent","_s","playerName","window","localStorage","getItem","test","setTest","navigate","connection","current","WebSocket","onopen","_connection$current","send","JSON","stringify","action","onmessage","e","data","parse","console","log","message","table","lenght","tableId","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaga/Desktop/poker-club/src/pages/PokerComponent.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n//import { useWebSocket } from '../WebSocketContext';\r\n\r\nconst PokerComponent = () => {\r\n    const playerName = window.localStorage.getItem('playerName');\r\n    const [test, setTest] = useState<string | null>(null);\r\n    const navigate = useNavigate();\r\n    const connection = useRef<WebSocket | null>(null);\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n        if (!connection.current) {\r\n            connection.current = new WebSocket('ws://localhost:8080')\r\n            // Handle WebSocket events\r\n            connection.current.onopen = () => {\r\n               connection.current?.send(JSON.stringify({ playerName, action: 'joinGame' }));\r\n            };\r\n\r\n            connection.current.onmessage = (e:any) => {\r\n                const data = JSON.parse(e.data);\r\n                console.log('PokerComponent received:', data);\r\n                setTest(data.message);\r\n\r\n                if(data.table.lenght === 4) {\r\n\r\n                }\r\n\r\n                if (data.tableId) {\r\n                    window.localStorage.setItem('tableId', data.tableId);\r\n                    navigate(`/play/${data.tableId}`);\r\n                }\r\n            };\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>{test}</h1>\r\n            <h3>Welcome to the Poker Game!</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PokerComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,UAAU,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EACrD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,UAAU,GAAGb,MAAM,CAAmB,IAAI,CAAC;EAEjDF,SAAS,CAAC,MAAM;IAGZ,IAAI,CAACe,UAAU,CAACC,OAAO,EAAE;MACrBD,UAAU,CAACC,OAAO,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;MACzD;MACAF,UAAU,CAACC,OAAO,CAACE,MAAM,GAAG,MAAM;QAAA,IAAAC,mBAAA;QAC/B,CAAAA,mBAAA,GAAAJ,UAAU,CAACC,OAAO,cAAAG,mBAAA,uBAAlBA,mBAAA,CAAoBC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEd,UAAU;UAAEe,MAAM,EAAE;QAAW,CAAC,CAAC,CAAC;MAC/E,CAAC;MAEDR,UAAU,CAACC,OAAO,CAACQ,SAAS,GAAIC,CAAK,IAAK;QACtC,MAAMC,IAAI,GAAGL,IAAI,CAACM,KAAK,CAACF,CAAC,CAACC,IAAI,CAAC;QAC/BE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,IAAI,CAAC;QAC7Cb,OAAO,CAACa,IAAI,CAACI,OAAO,CAAC;QAErB,IAAGJ,IAAI,CAACK,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE,CAE5B;QAEA,IAAIN,IAAI,CAACO,OAAO,EAAE;UACdxB,MAAM,CAACC,YAAY,CAACwB,OAAO,CAAC,SAAS,EAAER,IAAI,CAACO,OAAO,CAAC;UACpDnB,QAAQ,CAAC,SAASY,IAAI,CAACO,OAAO,EAAE,CAAC;QACrC;MACJ,CAAC;IACL;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI5B,OAAA;IAAA8B,QAAA,gBACI9B,OAAA;MAAA8B,QAAA,EAAKvB;IAAI;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACflC,OAAA;MAAA8B,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd,CAAC;AAAChC,EAAA,CAvCID,cAAc;EAAA,QAGCH,WAAW;AAAA;AAAAqC,EAAA,GAH1BlC,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}